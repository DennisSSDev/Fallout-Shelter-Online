
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.2 (Phaser v2.6.2)


class dragItem extends Phaser.Sprite {
	/**
	 * dragItem
	 * @param {Phaser.Game} aGame A reference to the currently running game.
	 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
	 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
	 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
	 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
	 */
	constructor(aGame, aX, aY, aKey, aFrame) {
		super(aGame, aX, aY, aKey || 'bomb', aFrame  == undefined || aFrame == null? null : aFrame);
		this.scale.setTo(0.27857276114138735, 0.27857276114138735);
		this.inputEnabled = true;
		this.item_type = 'bomb';
		this.input.enableDrag();
		this.events.onDragStop.add(this.activateEffect, this);
	}
	
	
	activateEffect(){
		console.log("in effect activator");
		switch(this.item_type){
		case 'bomb':
			this.inputEnabled = false;
			this.game.physics.arcade.enable(this);
			this.body.gravity.y = 700;
			break;
		default: console.log("no valid effects");
			break;
		}
	}
	
	/* sprite-methods-begin */
	// -- user code here --
	/* sprite-methods-end */
}
/* --- end generated code --- */
// -- user code here --
